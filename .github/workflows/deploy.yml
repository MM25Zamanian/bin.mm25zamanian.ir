name: Build & Publish Containers

on:
  workflow_dispatch:

  push:
    branches:
      - main
      - next

  pull_request:

env:
  USER: MM25Zamanian
  NAME: bunbin
  CONTEXT: .

jobs:
  build:
    name: Build & Publish Containers
    runs-on: ubuntu-latest

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      version: ${{ steps.meta.outputs.version }}
      bake-file-tags: ${{ steps.meta.outputs.bake-file-tags }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: ⤵️ Checkout repository
        uses: actions/checkout@v4.1.1

      - name: 🏗 Install cosign
        if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
        uses: sigstore/cosign-installer@v3.3.0

      - name: 🏗 Setup Docker Buildx
        if: ${{ steps.file_change.outputs.container_folder != 'false' }}
        uses: docker/setup-buildx-action@v3.0.0

      - name: 🏗 Log into ghcr.io registry
        if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{env.USER}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 🏗 Extract metadata
        if: ${{ steps.file_change.outputs.container_folder != 'false' }}
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: |
            name=ghcr.io/${{env.USER}}/${{env.NAME}},enable=true
            name=docker.io/${{env.USER}}/${{env.NAME}},enable=false
          tags: |
            type=sha,enable=true,pattern={{short-sha}}
          labels: |
            org.opencontainers.image.title="${{env.USER}}/${{env.NAME}}"
            org.opencontainers.image.vendor="Gecut"
            org.opencontainers.image.authors="S. MohammadMahdi Zamanian <mm25zamanian@gmail.com> (https://mm25zamanian.ir)"

      - name: 🚀 Build and push container image
        if: ${{ github.event_name != 'pull_request' && steps.file_change.outputs.container_folder != 'false' }}
        id: build_and_push
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{env.CONTEXT}}
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  write_outputs:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: tags
        run: echo '${{ needs.build.outputs.tags }}'
      - name: labels
        run: echo '${{ needs.build.outputs.labels }}'
      - name: version
        run: echo '${{ needs.build.outputs.version }}'
      - name: bake-file-tags
        run: echo '${{ needs.build.outputs.bake-file-tags }}'

  deploy:
    container: hamravesh/darkube-cli:v1.1
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: darkube-cli deploy
        run: darkube deploy --token ${{secrets.DEPLOY_TOKEN_LOVE_NEXUS_MM25ZAMANIAN_SINDAD_C15}} --app-id ${{secrets.APP_ID_LOVE_NEXUS_MM25ZAMANIAN_SINDAD_C15}} --image-tag ${{ needs.build.outputs.version }} --job-id ${GITHUB_RUN_ID}
